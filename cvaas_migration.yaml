---
- name: Migrate to CVaaS
  hosts: cv_server
  connection: local
  gather_facts: no
  vars:
    cvaas_api: https://www.cv-staging.corp.arista.io/api/v3/services/admin.Enrollment/AddEnrollmentToken
    cvaas_token: "{{lookup('file', '/Users/tamas/tokens/cvaas.tok')}}"
    cvp_device_api: "https://10.83.12.178/cvpservice/inventory/devices?provisioned=true"
    cvp_token: "{{lookup('file', '/Users/tamas/tokens/go178.tok')}}"
  tasks:
  - name: 'Collect devices facts from {{inventory_hostname}}'
    tags: [facts]
    arista.cvp.cv_facts_v3:
      facts:
        - devices
        - configlets
        - containers
    register: facts_devices
  - name: "Printing facts from {{inventory_hostname}}"
    tags: [facts]
    debug:
      msg: "{{facts_devices.data.cvp_containers}}"
    delegate_to: localhost
  
  - name: "Get Current Device Inventory Data From CVP REST API"
    tags: [rapi]
    ansible.builtin.uri:
      url: "{{ cvp_device_api }}"
      method: GET
      headers:
        Accept: "application/json"
        Cookie: "access_token={{ cvp_token }}"
      validate_certs: no
      return_content: yes
    register: current_cvp_devices_api_result
    until: current_cvp_devices_api_result.status == 200
    retries: 10
    delay: 2
  # Build list of device IPs from the inventory REST API call
  - name: "Building list of IP addresses"
    tags: [rapi]
    set_fact:
      device_inventory: "{{ device_inventory | default([]) + [item.ipAddress] }}"
    with_items: "{{ current_cvp_devices_api_result.content  }}"
  - name: Concatenating device_inventory
    tags: [rapi]
    set_fact:
      device_inventory_list: "{{ device_inventory | join('\n') }}"
  - name: "Building temporary device inventory"
    tags: [rapi]
    copy:
      content: "{{ device_inventory_list }}"
      dest: "./inventory/onprem_devices.yaml"
    delegate_to: localhost
  - name: "Update on_prem_devices.yaml file with group tag..."
    tags: [rapi]
    lineinfile:
      path: "./inventory/onprem_devices.yaml"
      line: '[onprem_devices]'
      insertbefore: BOF

  - name: "Generating TerminAttr onboarding token on CVaaS instance"
    tags: [build]
    ansible.builtin.uri:
      url: "{{ cvaas_api }}"
      method: POST
      headers:
        Accept: "application/json"
        Cookie: "access_token={{ cvaas_token }}"
      validate_certs: no
      return_content: yes
      body: '{"enrollmentToken": {"reenrollDevices": ["*"], "validFor": "720h"}}'
    register: cv_onboarding_token
    until: cv_onboarding_token.status == 200
    retries: 10
    delay: 2
  # Writing cvaas token to file
  - name: "Parsing CVaaS token"
    tags: [rapi]
    set_fact:
      cv_onboarding_token: "{{ cv_onboarding_token.content | list | join }}"
  - name: "Writing CVaaS token to file"
    tags: [rapi]
    copy:
      content: "{{ cv_onboarding_token[0].enrollmentToken.token }}"
      dest: "./cv-onboarding-token"

- name: "Copying the CVaaS token and TA configuration"
  hosts: onprem_devices
  vars:
    ansible_user: cvpadmin
    ansible_password: arastra
    ansible_connection: network_cli
    ansible_httpapi_use_ssl: True
    ansible_httpapi_validate_certs: False
    ansible_network_os: eos
    ansible_httpapi_port: 443
    ansible_python_interpreter: $(which python3)
  tasks:
  - name: Copy CVaaS token
    tags: [rapi]
    net_put:
       src: "./cv-onboarding-token"
       dest: "/tmp/cv-onboarding-token"
  - name: "Configuring TerminAttr on {{ inventory_hostname }}"
    eos_command:
      commands:
        - "enable"
        - "config"
        - "daemon TerminAttr"
        - "exec /usr/bin/TerminAttr -cvaddr=apiserver.cv-staging.corp.arista.io:443 -cvcompression=gzip -cvvrf=MGMT -taillogs -cvauth=token-secure,/tmp/cv-onboarding-token -smashexcludes=ale,flexCounter,hardware,kni,pulse,strata -ingestexclude=/Sysdb/cell/1/agent,/Sysdb/cell/2/agent -cvgnmi"
        - "shut"
        - "no shut"

- name: generating file
  hosts: localhost
  connection: local
  vars:
      cv_facts_dir: "./cv_facts_dir"
  tasks:
  - name: "Printing facts from {{inventory_hostname}}"
    tags: [facts]
    debug:
      msg: "{{hostvars['cv_server'].facts_devices.data.cvp_devices }}"
    delegate_to: localhost

  - name: "Writing on-prem facts from {{inventory_hostname}} to files"
    tags: [facts]
    copy:
      content: "{{hostvars['cv_server'].facts_devices.data.cvp_devices |  to_nice_yaml( width=50, explicit_start=True, explicit_end=True) }}"
      dest: "{{ cv_facts_dir }}/cvp_devices.yaml"
    delegate_to: localhost

- name: CVaaS
  hosts: cvaas
  connection: local
  gather_facts: no
  vars:
    CVP_CONFIGLETS:
      terminattr_config_cvaas: |
        daemon TerminAttr
          exec /usr/bin/TerminAttr -cvaddr=apiserver.cv-staging.corp.arista.io:443 -cvcompression=gzip -cvvrf=MGMT -taillogs -cvauth=token-secure,/tmp/cv-onboarding-token -smashexcludes=ale,flexCounter,hardware,kni,pulse,strata -ingestexclude=/Sysdb/cell/1/agent,/Sysdb/cell/2/agent -cvgnmi
          no shutdown
  tasks:
  - name: "Push config to {{inventory_hostname}}"
    arista.cvp.cv_configlet_v3:
      configlets: "{{hostvars['cv_server'].facts_devices.data.cvp_configlets}}"
      state: present
    delegate_to: cvaas
  - name: "Push new TerminAttr configlet"
    arista.cvp.cv_configlet_v3:
      configlets: "{{CVP_CONFIGLETS}}"
      state: present
    delegate_to: cvaas
  - name: "Uppend TerminAttr config to device facts"
    set_fact:
      new_devices_var: |
        {% set res = hostvars['cv_server'].facts_devices.data.cvp_devices -%}
        {% for device in res -%}
        {%     do device.configlets.append("terminattr_config_cvaas") -%}
        {%- endfor %}
        {{ res }}
  - name: "Generate container hierarchy"
    arista.cvp.cv_container_v3:
      topology: "{{hostvars['cv_server'].facts_devices.data.cvp_containers}}"
      state: present
  - name: "Move devices to target containers"
    arista.cvp.cv_device_v3:
      devices: "{{new_devices_var}}"
      state: present
    delegate_to: cvaas
  - name: "Upload new TerminAttr configlet"
    arista.cvp.cv_configlets_v3:
        configlets: "{{CVP_CONFIGLETS}}"
        state: present
